# Database
# Local development: use Docker Compose PostgreSQL
# Production: use Neon, Supabase, or other managed PostgreSQL
DATABASE_URL="postgresql://postgres:your-password@localhost:5432/globalists?schema=public"

# Redis
# Local development: use Docker Compose Redis
# Production: use Upstash, Redis Cloud, or other managed Redis
REDIS_URL="redis://localhost:6379"

# NextAuth.js
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET="your-secret-here-generate-with-openssl"
NEXTAUTH_URL="http://localhost:3000"

# Stripe (Test mode)
# Get from: https://dashboard.stripe.com/test/apikeys
NEXT_PUBLIC_STRIPE_PUBLIC_KEY="pk_test_..."
STRIPE_SECRET_KEY="sk_test_..."

# Stripe Webhook Secret
# Get from: https://dashboard.stripe.com/test/webhooks
# Local testing: use Stripe CLI `stripe listen --forward-to localhost:3000/api/webhooks/stripe`
STRIPE_WEBHOOK_SECRET="whsec_..."

# Email (Resend)
# Get from: https://resend.com/api-keys
RESEND_API_KEY="re_..."
FROM_EMAIL="onboarding@resend.dev"

# App
NODE_ENV="development"
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Optional: Monitoring & Analytics
# SENTRY_DSN=""
# NEXT_PUBLIC_GA_ID=""

# Optional: File uploads (if using cloud storage)
# CLOUDINARY_CLOUD_NAME=""
# CLOUDINARY_API_KEY=""
# CLOUDINARY_API_SECRET=""

# Optional: Feature flags
# ENABLE_PROMOTIONS="true"
# ENABLE_SUBSCRIPTIONS="true"
